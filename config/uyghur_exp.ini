[io]
input_file = uyghur_data/uyghur_aug_11721_select_40.ints # path to your input ints file
output_dir = ./neural_exp/uyghur_22 # path to your output folder. this specifies the prefix of the output folder
dict_file = uyghur_data/uyghur_aug_11721_select_40.dict # path to your dict file
punct_dict_file = uyghur_data/uyghur_punct.dict # path to a global punct file. comment it out if there is none
word_vecs_file = uyghur_data/uyghur_aug_11721_select_40.elmo.tch # the elmo embeddings file

[params]
iters = 30 # training iterations
k = 50 # number of nonterminal categories
init_alpha = 0.2 # initial alpha used by the Dirichlet initializer
max_num_per_batch = 4 # maximum number per training batch. 4 is a good number for long sentences
gold_pcfg_file = uyghur_data/uyghur_all_40.linetrees # the file that has the gold tree annotation
aug_number = 11721 # this means how many sentences in the input are not in the gold. comment it out if all input sentences have gold trees
emission_type = flow-neuralexp # the name of the model
flow_type = nice # type of flow architecture: nice or realnvp
lr_base = 1e-3 # the learning rate of the nonterminal production model
lr_emit = 1e-3 # the learning rate of the preterminal production model
optimizer = Adam_split # optimizer: Adam or Adam_split. If Adam is chosen, lr_emit has no effect
batch_average = sentence # how loss is averaged. The default, sentence, is good.
init_method = dirichlet # how to initialize the models
num_batches_per_eval = 2000 # the number of batches processed between two evaluations.
viterbi_batch_size = 24 # batch size of the evaluation using the Viterbi algorithm
num_batches_per_update = 1 # the number of batches accumulated between two optimizer steps
init_eval_flag = True # flag for evaluation before any updates
embedding_type = context # the type of embedding: context or word
aux_losses = sim_penalty # flag for turning on the sim penalty loss
sim_penalty_scaler = 10 # weight for the sim penalty loss
num_rnn_layers = 2 # the number of RNN layers in the nonterminal production model
num_flow_blocks = 4 # the number of flow blocks in the preterminal production model
